on:
    push:
      branches:
      - "dev" 
      # Sequence of patterns matched against refs/tags
      tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
  
  name: Upload Release Asset
  
  jobs:
    build:

      name: Upload Release Asset
      
      runs-on: ubuntu-latest

      strategy:
        matrix:
          node-version: [8.x, 10.x, 12.x]

      steps:
        - name: Setup Tweego
        - uses: actions/setup-go@v1
          with:
            go-version: '1.13.5' # The Go version to download (if necessary) and use.
        - run: go install bitbucket.org/tmedwards/tweego

        - name: Setup Node
        - uses: actions/checkout@v1
        - name: Use Node.js ${{ matrix.node-version }}
          uses: actions/setup-node@v1
          with:
            node-version: ${{ matrix.node-version }}
        - name: npm install, build, and test
          run: |
            npm ci
            npm run build --if-present
            npm test
          env:
            CI: true

        - name: Checkout code
          uses: actions/checkout@dev

        - name: Build with Tweego
          run: tweego 

        - name: Bundle Resources
          run: |
            mkdir ./release
            cd ./release
            mv /home/runner/work/liliths-throne-public/liliths-throne-public/res ./release
            mv /home/runner/work/liliths-throne-public/liliths-throne-public/target/game-1.jar ./release/LilithsThrone.jar
            zip -r release.zip *
        
        - name: Create Release
          id: create_release
          uses: actions/create-release@v1.0.0
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            tag_name: ${{ github.ref }}
            release_name: Release ${{ github.ref }}
            draft: false
            prerelease: false
        
        - name: Upload Release Asset
          id: upload-release-asset 
          uses: actions/upload-release-asset@v1.0.1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
            asset_path: release.zip
            asset_name: LilithsThrone${{ github.ref }}.zip
            asset_content_type: application/zip
  